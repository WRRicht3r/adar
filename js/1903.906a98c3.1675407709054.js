"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[1903],{31903:function(t,e,o){o.r(e),o.d(e,{default:function(){return k}});var i=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("dialog-base",{attrs:{visible:t.isVisible,title:t.isSwapAndSend?t.t("adar.send.confirmSwapAndSend"):t.t("swap.confirmSwap"),"custom-class":"dialog--confirm-swap"},on:{"update:visible":function(e){t.isVisible=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[o("s-button",{staticClass:"s-typography-button--large",attrs:{type:"primary",disabled:t.loading},on:{click:t.handleConfirmSwap}},[t._v(" "+t._s(t.t("exchange.confirm"))+" ")])]},proxy:!0}])},[o("div",{staticClass:"tokens"},[o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedFromValue))]),t.tokenFrom?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenFrom}}),t._v(" "+t._s(t.tokenFrom.symbol)+" ")],1):t._e()]),o("s-icon",{staticClass:"icon-divider",attrs:{name:"arrows-arrow-bottom-24"}}),o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedToValue))]),t.tokenTo?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenTo}}),t._v(" "+t._s(t.tokenTo.symbol)+" ")],1):t._e()]),t.isSwapAndSend?[t.isSwapAndSend&&t.from?o("div",{staticClass:"confirm-from"},[t._v(t._s(t.from))]):t._e(),o("s-icon",{staticClass:"icon-divider",attrs:{name:"arrows-arrow-bottom-24"}}),o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedToValue))]),t.tokenTo?o("div",{staticClass:"token"},[o("token-logo",{attrs:{token:t.tokenTo}}),t._v(" "+t._s(t.tokenTo.symbol)+" ")],1):t._e()]),t.isSwapAndSend&&t.to?o("div",{staticClass:"confirm-to"},[t._v(t._s(t.to))]):t._e()]:t._e()],2),t.isSwapAndSend?t._e():o("p",{staticClass:"transaction-message",class:{"transaction-message--min-received":!t.isExchangeB},domProps:{innerHTML:t._s(t.t("swap.swap"+(t.isExchangeB?"Input":"Output")+"Message",{transactionValue:"<span class='transaction-number'>"+t.formattedMinMaxReceived+"</span>"}))}}),o("s-divider"),o("swap-transaction-details",{attrs:{operation:t.operation}})],1)},a=[],s=o(60760),n=o(70655),r=o(53545),d=o(37365),c=o(36930),l=o(80710),p=o(16546),h=o(74614);let m=class extends((0,r.Wr)(d.tA.TransactionMixin,d.tA.DialogMixin)){constructor(...t){super(...t),(0,s.Z)(this,"slippageTolerance",void 0),(0,s.Z)(this,"fromValue",void 0),(0,s.Z)(this,"toValue",void 0),(0,s.Z)(this,"isExchangeB",void 0),(0,s.Z)(this,"selectedDexId",void 0),(0,s.Z)(this,"minMaxReceived",void 0),(0,s.Z)(this,"liquiditySource",void 0),(0,s.Z)(this,"tokenFrom",void 0),(0,s.Z)(this,"tokenTo",void 0),(0,s.Z)(this,"isInsufficientBalance",void 0),(0,s.Z)(this,"isSwapAndSend",void 0),(0,s.Z)(this,"from",void 0),(0,s.Z)(this,"to",void 0),(0,s.Z)(this,"valueTo",void 0)}get operation(){return this.isSwapAndSend?c.Operation.SwapAndSend:c.Operation.Swap}get formattedFromValue(){return this.formatStringValue(this.fromValue,this.tokenFrom?.decimals)}get formattedToValue(){return this.formatStringValue(this.toValue,this.tokenTo?.decimals)}get formattedMinMaxReceived(){const t=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,t)}async handleConfirmSwap(){if(this.isInsufficientBalance)this.$alert(this.t("exchange.insufficientBalance",{tokenSymbol:this.tokenFrom?this.tokenFrom.symbol:""}),{title:this.t("errorText")}),this.$emit("confirm");else try{await this.withNotifications((async()=>{this.isSwapAndSend?await d.hi.swap.executeSwapAndSend(this.to,this.tokenFrom,this.tokenTo,this.fromValue,this.toValue,this.slippageTolerance,this.isExchangeB):await d.hi.swap.execute(this.tokenFrom,this.tokenTo,this.fromValue,this.toValue,this.slippageTolerance,this.isExchangeB,this.liquiditySource,this.selectedDexId)})),this.$emit("confirm",!0)}catch(t){this.$emit("confirm")}this.isVisible=!1}};(0,n.__decorate)([h.SB.settings.slippageTolerance],m.prototype,"slippageTolerance",void 0),(0,n.__decorate)([h.SB.swap.fromValue],m.prototype,"fromValue",void 0),(0,n.__decorate)([h.SB.swap.toValue],m.prototype,"toValue",void 0),(0,n.__decorate)([h.SB.swap.isExchangeB],m.prototype,"isExchangeB",void 0),(0,n.__decorate)([h.SB.swap.selectedDexId],m.prototype,"selectedDexId",void 0),(0,n.__decorate)([h.Yn.swap.minMaxReceived],m.prototype,"minMaxReceived",void 0),(0,n.__decorate)([h.Yn.swap.swapLiquiditySource],m.prototype,"liquiditySource",void 0),(0,n.__decorate)([h.Yn.swap.tokenFrom],m.prototype,"tokenFrom",void 0),(0,n.__decorate)([h.Yn.swap.tokenTo],m.prototype,"tokenTo",void 0),(0,n.__decorate)([(0,r.fI)({default:!1,type:Boolean})],m.prototype,"isInsufficientBalance",void 0),(0,n.__decorate)([(0,r.fI)({default:!1,type:Boolean})],m.prototype,"isSwapAndSend",void 0),(0,n.__decorate)([(0,r.fI)({default:"",type:String})],m.prototype,"from",void 0),(0,n.__decorate)([(0,r.fI)({default:"",type:String})],m.prototype,"to",void 0),(0,n.__decorate)([(0,r.fI)({default:"",type:String})],m.prototype,"valueTo",void 0),m=(0,n.__decorate)([(0,r.wA)({components:{DialogBase:d.wx.DialogBase,TokenLogo:d.wx.TokenLogo,SwapTransactionDetails:(0,l.kF)(p.z8.SwapTransactionDetails)}})],m);var u=m,f=u,v=o(1001),_=(0,v.Z)(f,i,a,!1,null,"fd532adc",null),k=_.exports}}]);