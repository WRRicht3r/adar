"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[1055],{31055:function(e,i,t){t.r(i),t.d(i,{default:function(){return L}});var o=function(){var e=this,i=e.$createElement,t=e._self._c||i;return t("div",{directives:[{name:"loading",rawName:"v-loading",value:e.parentLoading,expression:"parentLoading"}],staticClass:"container"},[t("generic-page-header",{attrs:{"has-button-back":"",title:e.t("addLiquidity.title"),tooltip:e.t("pool.description")},on:{back:e.handleBack}}),t("s-form",{staticClass:"el-form--actions",attrs:{"show-message":!1}},[t("token-input",{attrs:{balance:e.getTokenBalance(e.firstToken),"is-select-available":"","is-max-available":e.isFirstMaxButtonAvailable,title:e.t("createPair.deposit"),token:e.firstToken,value:e.firstTokenValue,disabled:!e.areTokensSelected},on:{input:function(i){return e.handleTokenChange(i,e.setFirstTokenValue)},focus:function(i){return e.setFocusedField(e.FocusedField.First)},max:function(i){return e.handleAddLiquidityMaxValue(i,e.setFirstTokenValue)},select:function(i){return e.openSelectTokenDialog(!0)}}}),t("s-icon",{staticClass:"icon-divider",attrs:{name:"plus-16"}}),t("token-input",{attrs:{balance:e.getTokenBalance(e.secondToken),"is-select-available":"","is-max-available":e.isSecondMaxButtonAvailable,title:e.t("createPair.deposit"),token:e.secondToken,value:e.secondTokenValue,disabled:!e.areTokensSelected},on:{input:function(i){return e.handleTokenChange(i,e.setSecondTokenValue)},focus:function(i){return e.setFocusedField(e.FocusedField.Second)},max:function(i){return e.handleAddLiquidityMaxValue(i,e.setSecondTokenValue)},select:function(i){return e.openSelectTokenDialog(!1)}}}),t("slippage-tolerance",{staticClass:"slippage-tolerance-settings"}),t("s-button",{staticClass:"action-button s-typography-button--large",attrs:{type:"primary",disabled:!e.areTokensSelected||e.emptyAssets||e.isInsufficientBalance,loading:e.isSelectAssetLoading},on:{click:e.handleAddLiquidity}},[e.areTokensSelected?e.emptyAssets?[e._v(" "+e._s(e.t("buttons.enterAmount"))+" ")]:e.isInsufficientBalance?[e._v(" "+e._s(e.t("exchange.insufficientBalance",{tokenSymbol:e.insufficientBalanceTokenSymbol}))+" ")]:[e._v(" "+e._s(e.t("createPair.supply"))+" ")]:[e._v(" "+e._s(e.t("buttons.chooseTokens"))+" ")]],2),e.areTokensSelected?[e.isAvailable&&e.isNotFirstLiquidityProvider||!e.emptyAssets?e._e():t("div",{staticClass:"info-line-container"},[t("p",{staticClass:"info-line-container__title"},[e._v(e._s(e.t("createPair.firstLiquidityProvider")))]),t("info-line",{scopedSlots:e._u([{key:"info-line-prefix",fn:function(){return[t("p",{staticClass:"info-line--first-liquidity",domProps:{innerHTML:e._s(e.t("createPair.firstLiquidityProviderInfo"))}})]},proxy:!0}],null,!1,3709695096)})],1),!e.emptyAssets||(e.liquidityInfo||{}).balance?t("add-liquidity-transaction-details",{staticClass:"info-line-container",attrs:{"info-only":!1}}):e._e()]:e._e()],2),t("select-token",{attrs:{visible:e.showSelectTokenDialog,connected:e.isLoggedIn,asset:e.isFirstTokenSelected?e.secondToken:e.firstToken,"is-main-token-providers":e.isFirstTokenSelected,"disabled-custom":e.isFirstTokenSelected},on:{"update:visible":function(i){e.showSelectTokenDialog=i},select:e.selectToken}}),t("confirm-token-pair-dialog",{attrs:{visible:e.showConfirmDialog,"parent-loading":e.parentLoading||e.loading,"share-of-pool":e.shareOfPool,"first-token":e.firstToken,"second-token":e.secondToken,"first-token-value":e.firstTokenValue,"second-token-value":e.secondTokenValue,price:e.price,"price-reversed":e.priceReversed,"slippage-tolerance":e.slippageToleranceValue,"insufficient-balance-token-symbol":e.insufficientBalanceTokenSymbol},on:{"update:visible":function(i){e.showConfirmDialog=i},confirm:e.handleConfirmAddLiquidity}}),t("network-fee-warning-dialog",{attrs:{visible:e.showWarningFeeDialog,fee:e.removeLiquidityFormattedFee},on:{"update:visible":function(i){e.showWarningFeeDialog=i},confirm:e.confirmNetworkFeeWariningDialog}})],1)},s=[],n=t(60760),a=t(70655),d=t(53545),r=t(37365),l=t(36930),c=t(82753),u=t(68850),h=t(91487),p=t(33312),k=t(2591),f=t(80710),g=t(16546),T=t(74614),y=t(85530),v=t(93034);let F=class extends((0,d.Wr)(r.tA.TransactionMixin,r.tA.NetworkFeeWarningMixin,p.Z,k.Z,u.Z,h.Z)){constructor(...e){super(...e),(0,n.Z)(this,"FocusedField",v.G),(0,n.Z)(this,"slippageToleranceValue",void 0),(0,n.Z)(this,"xor",void 0),(0,n.Z)(this,"isLoggedIn",void 0),(0,n.Z)(this,"shareOfPool",void 0),(0,n.Z)(this,"liquidityInfo",void 0),(0,n.Z)(this,"isNotFirstLiquidityProvider",void 0),(0,n.Z)(this,"setFirstTokenAddress",void 0),(0,n.Z)(this,"setSecondTokenAddress",void 0),(0,n.Z)(this,"setFirstTokenValue",void 0),(0,n.Z)(this,"setSecondTokenValue",void 0),(0,n.Z)(this,"addLiquidity",void 0),(0,n.Z)(this,"setData",void 0),(0,n.Z)(this,"updateSubscriptions",void 0),(0,n.Z)(this,"resetSubscriptions",void 0),(0,n.Z)(this,"resetData",void 0),(0,n.Z)(this,"setFocusedField",void 0),(0,n.Z)(this,"showSelectTokenDialog",!1),(0,n.Z)(this,"isFirstTokenSelected",!1),(0,n.Z)(this,"insufficientBalanceTokenSymbol","")}handleLoggedInStateChange(e,i){i&&!e&&this.handleBack()}updateConnectionSubsriptions(e){e?this.updateSubscriptions():this.resetSubscriptions()}async mounted(){await this.withParentLoading((async()=>{if(this.firstRouteAddress&&this.secondRouteAddress){if(await this.setData({firstAddress:this.firstRouteAddress,secondAddress:this.secondRouteAddress}),!this.liquidityInfo)return this.handleBack()}else await this.setFirstTokenAddress(c.XOR.address)}))}destroyed(){this.resetData()}get firstRouteAddress(){return this.$route.params.firstAddress}get secondRouteAddress(){return this.$route.params.secondAddress}get areTokensSelected(){return!(!this.firstToken||!this.secondToken)}get removeLiquidityFormattedFee(){return this.formatCodecNumber(this.networkFees[l.Operation.RemoveLiquidity])}get isXorSufficientForNextOperation(){const e={type:this.isAvailable?l.Operation.AddLiquidity:l.Operation.CreatePair};return this.firstToken?.address===c.XOR.address&&(e.amount=this.getFPNumber(this.firstTokenValue),e.isXor=!0),this.isXorSufficientForNextTx(e)}get isFirstMaxButtonAvailable(){return!!this.firstToken&&(this.isLoggedIn&&(0,y.oI)(this.areTokensSelected,this.firstToken,this.firstTokenValue,this.networkFee,this.xor))}get isSecondMaxButtonAvailable(){return!!this.secondToken&&(this.isLoggedIn&&(0,y.oI)(this.areTokensSelected,this.secondToken,this.secondTokenValue,this.networkFee,this.xor))}get isInsufficientBalance(){if(this.isLoggedIn&&this.areTokensSelected){if((0,y.Vl)(this.firstToken,this.firstTokenValue,this.networkFee))return this.insufficientBalanceTokenSymbol=this.firstToken.symbol,!0;if((0,y.Vl)(this.secondToken,this.secondTokenValue,this.networkFee))return this.insufficientBalanceTokenSymbol=this.secondToken.symbol,!0}return this.insufficientBalanceTokenSymbol="",!1}async handleAddLiquidityMaxValue(e,i){e&&await this.handleTokenChange((0,y.MN)(e,this.networkFee),i)}async handleAddLiquidity(){if(!this.isXorSufficientForNextOperation){if(this.openWarningFeeDialog(),await this.waitOnNextTxFailureConfirmation(),!this.isWarningFeeDialogConfirmed)return;this.isWarningFeeDialogConfirmed=!1}this.openConfirmDialog()}async handleTokenChange(e,i){await i(e)}getTokenBalance(e){return(0,y.rh)(e)}openSelectTokenDialog(e){this.isFirstTokenSelected=e,this.showSelectTokenDialog=!0}async selectToken(e){const i=e?.address;i&&await this.withSelectAssetLoading((async()=>{this.isFirstTokenSelected?await this.setFirstTokenAddress(i):await this.setSecondTokenAddress(i)}))}async handleConfirmAddLiquidity(){await this.handleConfirmDialog((async()=>{await this.withNotifications(this.addLiquidity),this.handleBack()}))}handleBack(){f.ZP.push({name:g.sn.Pool})}};(0,a.__decorate)([T.SB.settings.slippageTolerance],F.prototype,"slippageToleranceValue",void 0),(0,a.__decorate)([T.Yn.assets.xor],F.prototype,"xor",void 0),(0,a.__decorate)([T.Yn.wallet.account.isLoggedIn],F.prototype,"isLoggedIn",void 0),(0,a.__decorate)([T.Yn.addLiquidity.shareOfPool],F.prototype,"shareOfPool",void 0),(0,a.__decorate)([T.Yn.addLiquidity.liquidityInfo],F.prototype,"liquidityInfo",void 0),(0,a.__decorate)([T.Yn.addLiquidity.isNotFirstLiquidityProvider],F.prototype,"isNotFirstLiquidityProvider",void 0),(0,a.__decorate)([T.aD.addLiquidity.setFirstTokenAddress],F.prototype,"setFirstTokenAddress",void 0),(0,a.__decorate)([T.aD.addLiquidity.setSecondTokenAddress],F.prototype,"setSecondTokenAddress",void 0),(0,a.__decorate)([T.aD.addLiquidity.setFirstTokenValue],F.prototype,"setFirstTokenValue",void 0),(0,a.__decorate)([T.aD.addLiquidity.setSecondTokenValue],F.prototype,"setSecondTokenValue",void 0),(0,a.__decorate)([T.aD.addLiquidity.addLiquidity],F.prototype,"addLiquidity",void 0),(0,a.__decorate)([T.aD.addLiquidity.setDataFromLiquidity],F.prototype,"setData",void 0),(0,a.__decorate)([T.aD.addLiquidity.updateSubscriptions],F.prototype,"updateSubscriptions",void 0),(0,a.__decorate)([T.aD.addLiquidity.resetSubscriptions],F.prototype,"resetSubscriptions",void 0),(0,a.__decorate)([T.aD.addLiquidity.resetData],F.prototype,"resetData",void 0),(0,a.__decorate)([T.QF.addLiquidity.setFocusedField],F.prototype,"setFocusedField",void 0),(0,a.__decorate)([(0,d.RL)("isLoggedIn")],F.prototype,"handleLoggedInStateChange",null),(0,a.__decorate)([(0,d.RL)("nodeIsConnected")],F.prototype,"updateConnectionSubsriptions",null),F=(0,a.__decorate)([(0,d.wA)({components:{GenericPageHeader:(0,f.kF)(g.z8.GenericPageHeader),SelectToken:(0,f.kF)(g.z8.SelectToken),SlippageTolerance:(0,f.kF)(g.z8.SlippageTolerance),ConfirmTokenPairDialog:(0,f.kF)(g.z8.ConfirmTokenPairDialog),NetworkFeeWarningDialog:(0,f.kF)(g.z8.NetworkFeeWarningDialog),TokenInput:(0,f.kF)(g.z8.TokenInput),AddLiquidityTransactionDetails:(0,f.kF)(g.z8.AddLiquidityTransactionDetails),InfoLine:r.wx.InfoLine}})],F);var S=F,_=S,b=t(1001),m=(0,b.Z)(_,o,s,!1,null,"2b134ebc",null),L=m.exports}}]);