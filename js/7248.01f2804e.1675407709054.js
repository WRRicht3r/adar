"use strict";(self["webpackChunkpolkaswap_exchange_web"]=self["webpackChunkpolkaswap_exchange_web"]||[]).push([[7248],{97248:function(e,t,i){i.r(t),i.d(t,{default:function(){return _}});var o=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("transaction-details",{attrs:{"info-only":e.infoOnly}},[i("div",{staticClass:"swap-info-container"},[e.isSwapInfoVisible?[e._l(e.priceValues,(function(e){var t=e.id,o=e.label,r=e.value;return i("info-line",{key:t,attrs:{label:o,value:r}})})),i("info-line",{attrs:{label:e.t("swap."+(e.isExchangeB?"maxSold":"minReceived")),"label-tooltip":e.t("swap.minReceivedTooltip"),value:e.formattedMinMaxReceived,"asset-symbol":e.getAssetSymbolText,"fiat-value":e.getFiatAmountByCodecString(e.minMaxReceived,e.isExchangeB?e.tokenFrom:e.tokenTo),"is-formatted":""}}),e._l(e.rewardsValues,(function(t,o){return i("info-line",e._b({key:o},"info-line",t,!1))})),i("info-line",{attrs:{label:e.t("swap.priceImpact"),"label-tooltip":e.t("swap.priceImpactTooltip")}},[i("value-status-wrapper",{attrs:{value:e.priceImpact}},[i("formatted-amount",{staticClass:"swap-value",attrs:{value:e.priceImpactFormatted}},[e._v("%")])],1)],1),i("info-line",{attrs:{label:e.t("swap.route")}},e._l(e.swapRoute,(function(t){return i("div",{key:t,staticClass:"liquidity-route swap-value"},[i("span",[e._v(e._s(t))]),i("s-icon",{attrs:{name:"el-icon el-icon-arrow-right route-icon"}})],1)})),0),i("info-line",{attrs:{label:e.t("swap.liquidityProviderFee"),"label-tooltip":e.liquidityProviderFeeTooltipText,value:e.formattedLiquidityProviderFee,"asset-symbol":e.xorSymbol,"is-formatted":""}})]:e._e(),e.isLoggedIn?i("info-line",{attrs:{label:e.t("swap.networkFee"),"label-tooltip":e.t("networkFeeTooltipText"),value:e.formattedNetworkFee,"asset-symbol":e.xorSymbol,"fiat-value":e.getFiatAmountByCodecString(e.networkFee),"is-formatted":""}}):e._e()],2)])},r=[],a=i(60760),s=i(70655),n=i(53545),d=i(37365),l=i(36930),p=i(82753),c=i(32806),u=i(80710),m=i(16546),v=i(74614);let h=class extends((0,n.Wr)(d.tA.FormattedAmountMixin,c.Z)){constructor(...e){super(...e),(0,a.Z)(this,"networkFees",void 0),(0,a.Z)(this,"liquidityProviderFee",void 0),(0,a.Z)(this,"rewards",void 0),(0,a.Z)(this,"path",void 0),(0,a.Z)(this,"isExchangeB",void 0),(0,a.Z)(this,"selectedDexId",void 0),(0,a.Z)(this,"price",void 0),(0,a.Z)(this,"priceReversed",void 0),(0,a.Z)(this,"isLoggedIn",void 0),(0,a.Z)(this,"tokenFrom",void 0),(0,a.Z)(this,"tokenTo",void 0),(0,a.Z)(this,"minMaxReceived",void 0),(0,a.Z)(this,"priceImpact",void 0),(0,a.Z)(this,"getAsset",void 0),(0,a.Z)(this,"infoOnly",void 0),(0,a.Z)(this,"operation",void 0)}get isSwapInfoVisible(){return this.operation!==l.Operation.Transfer}get liquidityProviderFeeTooltipText(){return this.t("swap.liquidityProviderFeeTooltip",{liquidityProviderFee:this.liquidityProviderFeeValue})}get swapRoute(){return this.path.map((e=>this.getAsset(e)?.symbol??"?"))}get priceValues(){const e=this.tokenFrom?.symbol??"",t=this.tokenTo?.symbol??"";return[{id:"from",label:this.t("swap.firstPerSecond",{first:e,second:t}),value:this.formatStringValue(this.price)},{id:"to",label:this.t("swap.firstPerSecond",{first:t,second:e}),value:this.formatStringValue(this.priceReversed)}]}get priceImpactFormatted(){return this.formatStringValue(this.priceImpact)}get rewardsValues(){return this.rewards.map(((e,t)=>{const i=p.KnownAssets.get(e.currency),o=this.formatCodecNumber(e.amount);return{value:o,fiatValue:this.getFiatAmountByString(o,i),assetSymbol:i?.symbol??"",label:0===t?this.t("swap.rewardsForSwap"):""}}))}get networkFee(){return this.networkFees[this.operation||l.Operation.Swap]}get formattedNetworkFee(){return this.formatCodecNumber(this.networkFee)}get liquidityProviderFeeValue(){return this.formatStringValue("0.3")}get formattedLiquidityProviderFee(){return this.formatCodecNumber(this.liquidityProviderFee)}get formattedMinMaxReceived(){const e=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,e)}get xorSymbol(){return" "+p.XOR.symbol}get getAssetSymbolText(){return(this.isExchangeB?this.tokenFrom:this.tokenTo)?.symbol??""}};(0,s.__decorate)([v.SB.wallet.settings.networkFees],h.prototype,"networkFees",void 0),(0,s.__decorate)([v.SB.swap.liquidityProviderFee],h.prototype,"liquidityProviderFee",void 0),(0,s.__decorate)([v.SB.swap.rewards],h.prototype,"rewards",void 0),(0,s.__decorate)([v.SB.swap.path],h.prototype,"path",void 0),(0,s.__decorate)([v.SB.swap.isExchangeB],h.prototype,"isExchangeB",void 0),(0,s.__decorate)([v.SB.swap.selectedDexId],h.prototype,"selectedDexId",void 0),(0,s.__decorate)([v.Yn.swap.price],h.prototype,"price",void 0),(0,s.__decorate)([v.Yn.swap.priceReversed],h.prototype,"priceReversed",void 0),(0,s.__decorate)([v.Yn.wallet.account.isLoggedIn],h.prototype,"isLoggedIn",void 0),(0,s.__decorate)([v.Yn.swap.tokenFrom],h.prototype,"tokenFrom",void 0),(0,s.__decorate)([v.Yn.swap.tokenTo],h.prototype,"tokenTo",void 0),(0,s.__decorate)([v.Yn.swap.minMaxReceived],h.prototype,"minMaxReceived",void 0),(0,s.__decorate)([v.Yn.swap.priceImpact],h.prototype,"priceImpact",void 0),(0,s.__decorate)([v.Yn.assets.assetDataByAddress],h.prototype,"getAsset",void 0),(0,s.__decorate)([(0,n.fI)({default:!0,type:Boolean})],h.prototype,"infoOnly",void 0),(0,s.__decorate)([(0,n.fI)({default:"",type:String})],h.prototype,"operation",void 0),h=(0,s.__decorate)([(0,n.wA)({components:{ValueStatusWrapper:(0,u.kF)(m.z8.ValueStatusWrapper),TransactionDetails:(0,u.kF)(m.z8.TransactionDetails),FormattedAmount:d.wx.FormattedAmount,InfoLine:d.wx.InfoLine}})],h);var w=h,y=w,f=i(1001),g=(0,f.Z)(y,o,r,!1,null,null,null),_=g.exports}}]);